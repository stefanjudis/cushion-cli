{"name":"Cushion-cli","tagline":"The command line tool to control your CouchDB.","body":"![cushion logo](https://raw.github.com/stefanjudis/cushion-cli/master/assets/cushion-cli-page-logo.png)\r\n\r\n# cushion-cli [![Build Status](https://travis-ci.org/stefanjudis/cushion-cli.png?branch=master)](https://travis-ci.org/stefanjudis/cushion-cli) [![NPM version](https://badge.fury.io/js/cushion-cli.png)](http://badge.fury.io/js/cushion-cli) [![Dependency Status](https://gemnasium.com/stefanjudis/cushion-cli.png)](https://gemnasium.com/stefanjudis/cushion-cli)\r\n\r\n\r\n## Your are a command line hero. And you like CouchDB. Maybe cushion-cli is something for you.\r\n\r\n### Command line tool for cushion CouchDB API. It is based on the node.js CouchDB-Api [Cushion](https://github.com/Zoddy/cushion).\r\n\r\n\r\n###[Introduction on Youtube](https://www.youtube.com/watch?v=w5ppOvKwWC0)\r\n\r\n\r\n## Getting Started\r\nInstall the module with: `npm install -g cushion-cli`\r\n\r\nAfter that the global `cushion` command should be available in your terminal. You can call it with different arguments.\r\n\r\n### without any arguments\r\n\r\nCushion will start with a setup dialog to get information about connection host, port, etc.\r\n\r\n```\r\ncushion\r\n```\r\n\r\n### with version argument\r\n\r\nCushion will show version number and not start the interactive command line tool.\r\n\r\n```\r\ncushion -v\r\ncushion --version\r\n```\r\n\r\n### with host and port defined\r\n\r\nCushion will not show any setup dialog and will try to establish connection with given parameters. In case of failure default setup prompt dialog will be started.\r\n\r\n```\r\ncushion -h 127.0.0.1 -p 5984\r\ncushion --host 127.0.0.1 --port 5984\r\n```\r\n\r\n### with host, port and admin name defined\r\n\r\nCushion will ask for admin password and will try to establish connection with given parameters. In case of failure default setup prompt dialog will be started.\r\n\r\n```\r\ncushion -h 127.0.0.1 -p 5984 -a foo\r\ncushion --host 127.0.0.1 --port 5984 --admin foo\r\n```\r\n\r\n## General Commands ( not depending on level and usable all the time ):\r\n\r\n### connection\r\n\r\n**Description:** Switch to connection level.\r\n\r\nNo matter at which level you are, you can jump to connection level to use specific commands at this level.\r\n\r\nAfter switching to connection level there will be a few new connection specific commands. So check them out by only pressing **TAB**.\r\n\r\n**Example:**\r\n\r\n```\r\ndocument ✩ [documentName] ✩ -> connection\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n### database [databaseName]\r\n**Description:** Switch to database level.\r\n\r\nJump to database level with command. If you are at connection level you need to set up a name. That means if you want to set up a new database switch the new name only and call the ```create``` command afterwards. If you want to work with an existing one type in database and enter first letter and press **TAB** . \r\n\r\n**! This command is supported by auto-completion !**\r\n\r\nAfter switching to database level there will be a few new database specific commands. So check them out by only pressing **TAB**.\r\n\r\nIf you are at document level use this command to go back to database level. Alternatively you could use ```..```.\r\n\r\n**Examples:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> database [databaseName]\r\ndatabase ✩ [databaseName] ✩ ->\r\n```\r\n\r\n```\r\ndocument ✩ [documentName] ✩ -> database\r\ndatabase ✩ [databaseName] ✩ ->\r\n```\r\n\r\n### exit\r\n\r\n**Description:** Stop cushion and to something else.\r\n\r\n**Example:**\r\n\r\n```\r\nconncetion ✩ [host] ✩ -> exit\r\nBye bye - happy couching\r\n```\r\n\r\n### help [command]\r\n\r\n**Description:** Look for help for specific command.\r\n\r\n**This command is level specific!** It will only show you the help messages for commands available on your current level (connection, database, document, user). To check which commands are available for some help (if you find something that is missing, [please drop me a line](mailto:stefanjudis@gmail.com)) enter ```help```and press **TAB**. \r\n\r\n**! This command is supported by auto-completion !**\r\n\r\n**Example:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> help version\r\n\r\nGet version of connected couchdb.\r\n\r\nCommand:\r\n    $ version\r\n    \r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n### listDatabases\r\n\r\n**Description:** Get list of all databases of current CouchDB connection.\r\n\r\n**Example:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> listDatabases\r\n\r\nCouchDB includes the following databases:\r\n\r\nResponse:\r\n- _replicator\r\n- _users\r\n- foo\r\n- bar\r\n- baz\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n### listUsers\r\n\r\n**Description:** Get list of all users of connected CouchDB.\r\n\r\n**Example:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> listUsers\r\n\r\nFollowing users exist:\r\n\r\nResponse:\r\n- foo\r\n- bar\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n### user [userName]\r\n\r\n**Description:** Switch to user level.\r\n\r\nEnter a given name for switching either to an existing user or for creating a new one by calling ```create``` at user level. To check which users are available to switch to enter ```user```and press **TAB**.\r\n\r\n**! This command is supported by auto-completion !**\r\n\r\nAfter switching to user level there will be a few new user specific commands. So check them out by only pressing **TAB**.\r\n\r\n**Example:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> user [userName]\r\nuser ✩ [userName] ✩ ->\r\n```\r\n\r\n### [..]\r\n\r\n**Description:** Switch to parent level.\r\n\r\nIf you are at document level you will switch to database level. Database and user level will switch to connection level. Command at connection level will do nothing.\r\n\r\n**Example:**\r\n\r\n```\r\ndatabase ✩ [databaseName] ✩ -> ..\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n\r\n## Connection Level Commands ( \"connection ✩ [host] ✩ ->\" ):\r\n\r\n### activeTaks\r\n\r\n**Description:** Get list of active tasks.\r\n\r\n**Example:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> activeTasks\r\n\r\nResponse:\r\n(empty array)\r\n\r\nconnection ✩ 127.0.0.1 ✩ ->\r\n```\r\n\r\n### config [section] [option] [value]\r\n\r\n**Description:** Get or set config information.\r\n\r\nThe parameters section, option and value are optional. So if you want to retrieve all config information just call ```config``` without any parameters. If you want to retrieve config information for a particular section call ```config [section]``` and so on. If you want to **set** any config option just set the value as third parameter ( 4th example ).\r\n\r\n**! This command is supported by auto-completion for section !**\r\n\r\n**Examples:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> config\r\n\r\nResponse:\r\nhttpd_design_handlers:\r\n  _info:    {couch_httpd_db,   handle_design_info_req}\r\n  _list:    {couch_httpd_show, handle_view_list_req}\r\n  …\r\n  a lot of fancy information here\r\n  …\r\n  util_driver_dir:    /opt/local/lib/couchdb/erlang/lib/couch-1.1.1/priv/lib\r\n  view_index_dir:     /opt/local/var/lib/couchdb\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n```\r\nconnection ✩ [host] ✩ -> config stats\r\n\r\nResponse:\r\nrate:    1000\r\nsamples: [0, 60, 300, 900]\r\n\r\nconnection ✩ host ✩ ->\r\n```\r\n\r\n```\r\nconnection ✩ [host] ✩ -> config stats rate\r\n\r\nResponse:\r\n1000\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n```\r\nconnection ✩ [host] ✩ -> config ssl port 1000\r\n\r\nResponse:\r\ntrue\r\n\r\nconnection ✩ [host] ✩ -> config ssl port\r\n\r\nResponse:\r\n1000\r\n\r\nconnection ✩ 127.0.0.1 ✩ ->\r\n```\r\n\r\n### createAdmin [name] [password]\r\n\r\n**Description:** Create a new admin. You have got the possibilities to do in one step or to run a prompt dialog asking for name and password.\r\n\r\n**Examples:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> createAdmin\r\nWhat is the name of admin? john\r\nWhat is the password for john? fancyPassword\r\nAdmin was created.\r\n\r\nResponse:\r\ntrue\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n```\r\nconnection ✩ [host] ✩ -> createAdmin john fancyPassword\r\nAdmin was created.\r\n\r\nResponse:\r\ntrue\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n### deleteAdmin [name]\r\n\r\n**Description:** Delete an existing admin. You have got the possibilities to do in one step or to run a prompt dialog asking for admin name.\r\n\r\n**! This command is supported by auto-completion for the wished admin !**\r\n\r\n**Examples:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> deleteAdmin\r\nWhat is the name of admin? john\r\nAdmin was deleted.\r\n\r\nResponse:\r\ntrue\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n```\r\nconnection ✩ [host] ✩ -> deleteAdmin john\r\nAdmin was deleted.\r\n\r\nResponse:\r\ntrue\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n### deleteConnection [name|index] [name|index] ...\r\n\r\n**Description:** If you set up a new connection you have the possibility to save the connection for later usage. Additional to that you can save connection by calling the [saveConnection](#saveconnection-name) command. To delete useless connections from storage use this command.\r\n\r\n**! This command is supported by auto-completion for the connection name !**\r\n\r\n**Examples:**\r\n\r\n```\r\nConnection file found.\r\nYou have the following saved connections:\r\n\r\n(1) local -> 127.0.0.1\r\n(2) foo -> 127.0.0.1\r\n…\r\na lot of fancy information here\r\n…\r\nconnection ✩ [host] ✩ -> deleteConnection foo\r\n\r\nConnection foo deleted.\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n```\r\nConnection file found.\r\nYou have the following saved connections:\r\n\r\n(1) local -> 127.0.0.1\r\n(2) foo -> 127.0.0.1\r\n…\r\na lot of fancy information here\r\n…\r\nconnection ✩ [host] ✩ -> deleteConnection 2\r\n\r\nConnection foo deleted.\r\n\r\nconnection ✩ [host] ✩ ->\r\n\r\n```\r\n\r\n```\r\nonnection file found.\r\n\r\nYou have the following saved connections:\r\n\r\n(1) local -> 127.0.0.1\r\n(2) test1 -> 127.0.0.1\r\n(3) test2 -> 127.0.0.1\r\n(4) test3 -> 127.0.0.1\r\n(5) test4 -> 127.0.0.1\r\n(6) test5 -> 127.0.0.1\r\n…\r\na lot of fancy information here\r\n…Yeah! You are now connected to 127.0.0.1:5984!\r\n\r\nconnection ✩ [host] ✩ -> deleteConnection test1 test3 test5\r\n\r\nConnection(s) test1, test3, test5 deleted.\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n```\r\nConnection file found.\r\n\r\nYou have the following saved connections:\r\n\r\n(1) local -> 127.0.0.1\r\n(2) test2 -> 127.0.0.1\r\n(3) test4 -> 127.0.0.1\r\n(4) test3 -> 127.0.0.1\r\n\r\nconnection ✩ [host] ✩ -> deleteConnection 2 4\r\n\r\nConnection(s) 2, 4 deleted.\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n### listAdmins\r\n\r\n**Description:** Retrieve a list of admins of connected CouchDB.\r\n\r\n**Examples:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> listAdmins\r\n\r\nFollowing admins exist:\r\n\r\nResponse:\r\n- foo\r\n- bar\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n### log [bytes]\r\n\r\n**Description:** Retrieve the tail of the server logs of connected CouchDB. Without set bytes param you will get 1000 Bytes of the tail.\r\n\r\n**Examples:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> log\r\n\r\nResponse:\r\nT] [info] [<0.23322.8>] 127.0.0.1 - - 'GET' /_config 200\r\n[Tue, 12 Mar 2013 21:58:41 GMT] [info] [<0.31614.8>] 127.0.0.1 - - 'GET' / 200\r\n…\r\nlot of fancy information here\r\n…\r\n[Tue, 12 Mar 2013 22:16:03 GMT] [info] [<0.8336.9>] 127.0.0.1 - - 'GET' / 200\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n```\r\nconnection ✩ [host] ✩ -> log 32\r\n\r\nResponse:\r\n0.1 - - 'GET' /_log?bytes=8 200\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n### restart\r\n\r\n**Description:** Restart the CouchDB. You have to be logged in as admin to do so.\r\n\r\n**Example:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> restart\r\n\r\nResponse:\r\nok: true\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n### saveConnection [name]\r\n\r\n**Description:** Save the connection for later usage. \r\n\r\n**Example:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> saveConnection foo\r\n\r\nConnection foo was saved.\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n### showConnection\r\n\r\n**Description:** If you are at a new connection and you forgot what the settings was, this command will give you information about current connection.\r\n\r\n**Example:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> showConnection\r\n\r\nYour current connection is:\r\n\r\nhost -> 127.0.0.1\r\nport -> 5984\r\nusername -> john\r\npassword -> fancyPassword\r\nsecure -> false\r\npath -> some/path/to/someWhere\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n### showConnections\r\n\r\n**Description:** Get a list of all saved connections.\r\n\r\n**Example:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> showConnections\r\nConnection file found.\r\nYou have the following saved connections:\r\n\r\n(1) local -> 127.0.0.1\r\n(2) foo -> someHost\r\n(3) bar -> anotherHost\r\n\r\nconnection ✩ host ✩ ->\r\n```\r\n\r\n### stats\r\n\r\n**Description:** Get server statistics.\r\n\r\n**Example:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> stats\r\n\r\nResponse:\r\ncouchdb:\r\n  open_databases:\r\n    description: number of open databases\r\n    current:     null\r\n    sum:         null\r\n    …\r\n    a lot of fancy information here\r\n    …\r\n    min:         null\r\n    max:         null\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n### uuids [numberOfUuids]\r\n\r\n**Description:** Create CouchDB uuids.\r\n\r\n**Examples:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> uuids\r\n\r\nResponse:\r\n- 4be0aced2a9fba4d4514ceb56e000d6b\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n```\r\nconnection ✩ [host] ✩ -> uuids 10\r\n\r\nResponse:\r\n- 4be0aced2a9fba4d4514ceb56e001cee\r\n- 4be0aced2a9fba4d4514ceb56e002286\r\n- 4be0aced2a9fba4d4514ceb56e003050\r\n- 4be0aced2a9fba4d4514ceb56e00399e\r\n- 4be0aced2a9fba4d4514ceb56e003afd\r\n- 4be0aced2a9fba4d4514ceb56e0045fd\r\n- 4be0aced2a9fba4d4514ceb56e00510b\r\n- 4be0aced2a9fba4d4514ceb56e005973\r\n- 4be0aced2a9fba4d4514ceb56e0067a0\r\n- 4be0aced2a9fba4d4514ceb56e006be4\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n### version\r\n\r\n**Description:** Get version of connected CouchDB.\r\n\r\n**Example:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> version\r\n\r\nResponse:\r\n1.1.1\r\n\r\nconnection ✩ [host] ✩ ->\r\n```\r\n\r\n## Database Level Commands ( \"database ✩ [databaseName] ✩ ->\" ):\r\n\r\n### allDesignDocuments \r\n\r\n**Description:** Get a list of all design documents. The representation is without '_design/' at the beginning, because you have to use it at ```view``` command without prefix anyway.\r\n\r\n**Example:**\r\n\r\n```\r\ndatabase ✩ [databaseName] ✩ -> allDesignDocuments\r\nThis databases includes of 2 design documents.\r\n\r\nResponse:\r\n- designFoo\r\n- designBar\r\n\r\ndatabase ✩ [databaseName] ✩ ->\r\n```\r\n\r\n### allDocuments [param1] [param2] ...\r\n\r\n**Description:** Get a list of all documents given in selected database. Look for all possible param at [here](http://wiki.apache.org/couchdb/HTTP_Document_API#all_docs) at query parameters.\r\n\r\n**Example:**\r\n\r\n```\r\ndatabase ✩ [databaseName] ✩ -> allDocuments\r\nThis databases exists of 10 documents.\r\nDisplayed result has an offset of 0\r\n\r\nResponse:\r\nDoc1:            6-841ea3bec41a1ccbf776591dda80e1f9\r\nDoc2:            14-f65a9da7700c81a73d23985e7fe286b2\r\n_design/entries: 2-3b756e80956bb0ddff78dbd9a4468a3e\r\nDoc3:            19-819e98e81df4c835841e51b83749c918\r\n…\r\n\r\ndatabase ✩ [databaseName] ✩ ->\r\n```\r\n\r\n```\r\ndatabase ✩ [databaseName] ✩ -> allDocuments limit=3 startkey=\"_design/entries\"\r\nThis databases exists of 10 documents.\r\nDisplayed result has an offset of 2\r\n\r\nResponse:\r\n_design/entries: 2-3b756e80956bb0ddff78dbd9a4468a3e\r\nDoc3:            19-819e98e81df4c835841e51b83749c918\r\nDoc4:            15-04000ead021dacbcf43a8c8969c5b2f1\r\n\r\ndatabase ✩ [databaseName] ✩ ->\r\n```\r\n\r\n### allViews [designName]\r\n\r\n**Description:** Get a list of views for design document.\r\n\r\n**! This command is supported by auto-completion for the design name !**\r\n\r\n**Example:**\r\n\r\n```\r\ndatabase ✩ [databaseName] ✩ -> allViews foo\r\nThis design document includes of 2 views.\r\n\r\nResponse:\r\n- viewBar\r\n- viewBaz\r\n\r\ndatabase ✩ [databaseName] ✩ ->\r\n```\r\n\r\n### cleanup\r\n\r\n**Description:** Start [view cleanup](http://wiki.apache.org/couchdb/HTTP_view_API#View_Cleanup) for connected database.\r\n\r\n**Example:**\r\n\r\n```\r\ndatabase ✩ [databaseName] ✩ -> cleanup\r\n\r\nResponse:\r\ntrue\r\n\r\ndatabase ✩ [databaseName] ✩ ->\r\n```\r\n\r\n### compact\r\n\r\n**Description:** Start [compaction](http://wiki.apache.org/couchdb/Compaction) for connected database.\r\n\r\n**Example:**\r\n\r\n```\r\ndatabase ✩ [databaseName] ✩ -> compact\r\n\r\nResponse:\r\ntrue\r\n\r\ndatabase ✩ [databaseName] ✩ ->\r\n```\r\n\r\n### create\r\n\r\n**Description:** Create new database (if not exist) and set it in CouchDB. You need to be at database level to execute this command. \r\n\r\n**Example:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> database foo\r\n\r\nSwitched to database foo\r\n\r\ndatabase ✩ foo ✩ -> create\r\n\r\nDatabase created.\r\n\r\ndatabase ✩ foo ✩ -> listDatabases\r\n\r\nCouchDB includes the following databases:\r\n\r\nResponse:\r\n- _replicator\r\n- _users\r\n- db1\r\n- db2\r\n- foo\r\n\r\ndatabase ✩ foo ✩ ->\r\n```\r\n\r\n### destroy\r\n\r\n**Description:** Delete given database and remove it from CouchDB. Switch to database level of an existing database and call ```destroy```command.\r\n\r\n**Example:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> listDatabases\r\n\r\nCouchDB includes the following databases:\r\n\r\nResponse:\r\n- _replicator\r\n- _users\r\n- db1\r\n- db2\r\n- foo\r\n\r\nconnection ✩ [host] ✩ -> database foo\r\n\r\nSwitched to database foo\r\n\r\ndatabase ✩ foo ✩ -> destroy\r\n\r\nDatabase deleted.\r\n\r\nSwitched to connection level\r\n\r\nconnection ✩ [host] ✩ -> listDatabases\r\n\r\nCouchDB includes the following databases:\r\n\r\nResponse:\r\n- _replicator\r\n- _users\r\n- db1\r\n- db2\r\n\r\nconnection ✩ [host] ✩ -\r\n```\r\n\r\n### document [docId]\r\n\r\n**Description:** Switch to document level by ID. If you don't set the ID CouchDB will set it for you later. After switching to document level don't forget to ```load``` given document, if you want to access the data.\r\n\r\n**! This command is supported by auto-completion for the document id !**\r\n\r\n**Example:**\r\n\r\n```\r\ndatabase ✩ [databaseName] ✩ -> document doc1\r\n\r\nSwitched to document level.\r\n\r\ndocument ✩ doc1 ✩ ->\r\n```\r\n\r\n```\r\ndatabase ✩ [databaseName] ✩ -> document\r\n\r\nSwitched to document level.\r\n\r\ndocument ✩ ... ✩ ->\r\n```\r\n\r\n### ensureFullCommit\r\n\r\n**Description:** Saves all uncommited stuff to the disk.\r\n\r\n**Example:**\r\n\r\n```\r\ndatabase ✩ [databaseName] ✩ -> ensureFullCommit\r\n\r\nResponse:\r\ntrue\r\n\r\ndatabase ✩ [databaseName] ✩ ->\r\n```\r\n\r\n### info\r\n\r\n**Description:** Get information about connected database.\r\n\r\n**Example:**\r\n\r\n```\r\ndatabase ✩ [databaseName] ✩ -> info\r\n\r\nResponse:\r\ndb_name:              foo\r\ndoc_count:            10\r\ndoc_del_count:        7\r\nupdate_seq:           149\r\npurge_seq:            0\r\ncompact_running:      false\r\ndisk_size:            618587\r\ninstance_start_time:  1363201782697759\r\ndisk_format_version:  5\r\ncommitted_update_seq: 149\r\n\r\ndatabase ✩ [databaseName] ✩ ->\r\n```\r\n\r\n### tmpView [map] [params|reduce] [reduce]\r\n\r\n**Description:** Retrieve a temporary view for given database.\r\n\r\n**Example:**\r\n\r\n```\r\ndatabase ✩ [databaseName] ✩ -> tmpView 'function(doc) {emit(doc._id, doc);}'\r\nThis databases exists of 10 document.\r\nDisplayed result has an offset of 0.\r\n\r\n\r\nResponse:\r\n-\r\n  id:    4be0aced2a9fba4d4514ceb56e007a04\r\n  key:   4be0aced2a9fba4d4514ceb56e007a04\r\n  value:\r\n    _id:  4be0aced2a9fba4d4514ceb56e007a04\r\n    _rev: 1-967a00dff5e02add41819138abb3284d\r\n-\r\n  id:    id1\r\n  key:   key1\r\n  value:\r\n    _id:        id1\r\n    _rev:       6-841ea3bec41a1ccbf776591dda80e1f9\r\n    name:       foo\r\n    \r\ndatabase ✩ [databaseName] ✩ ->    \r\n```\r\n\r\n```\r\ndatabase ✩ [databaseName] ✩ -> tmpView 'function(doc) {emit(doc._id, doc);}' limit=1\r\nThis databases exists of 10 documents.\r\nDisplayed result has an offset of 0.\r\n\r\n\r\nResponse:\r\n-\r\n  id:    4be0aced2a9fba4d4514ceb56e007a04\r\n  key:   4be0aced2a9fba4d4514ceb56e007a04\r\n  value:\r\n    _id:  4be0aced2a9fba4d4514ceb56e007a04\r\n    _rev: 1-967a00dff5e02add41819138abb3284d\r\n    \r\ndatabase ✩ [databaseName] ✩ -> \r\n```\r\n\r\n```\r\ndatabase ✩ [databaseName] ✩ -> tmpView 'function(doc) {emit(doc._id, doc);}' 'function(keys, values, rereduce){return sum()}'\r\nThis databases exists of undefined documents.\r\nDisplayed result has an offset of undefined.\r\n\r\n\r\nResponse:\r\n-\r\n  key:   null\r\n  value: 0\r\n\r\ndatabase ✩ [databaseName] ✩ ->\r\n```\r\n\r\n```\r\ndatabase ✩ [databaseName] ✩ -> tmpView 'function(doc) {emit(doc._id, doc);}' limit=1 'function(keys, values, rereduce){return sum()}'\r\nThis databases exists of 10 documents.\r\nDisplayed result has an offset of 0.\r\n\r\n\r\nResponse:\r\n-\r\n  id:    4be0aced2a9fba4d4514ceb56e007a04\r\n  key:   4be0aced2a9fba4d4514ceb56e007a04\r\n  value:\r\n    _id:  4be0aced2a9fba4d4514ceb56e007a04\r\n    _rev: 1-967a00dff5e02add41819138abb3284d\r\n\r\ndatabase ✩ [databaseName] ✩ ->\r\n```\r\n\r\n### view [design] [view] [param1] [param2] ...\r\n\r\n**Description:** Retrieve a particular view in design document for given database.\r\n\r\n**Example:** \r\n\r\n```\r\ndatabase ✩ [databaseName] ✩ -> view entries all\r\n\r\nThis databases exists of 9 documents.\r\n\r\nDisplayed result has an offset of 0.\r\n\r\nResponse:\r\n- id:    document1\r\n  key:    foo1\r\n  value:\r\n    _id:        document1\r\n    _rev:       6-841ea3bec41a1ccbf776591dda80e1f9\r\n    bar:        baz\r\n- id:    document2\r\n  key:   foo2\r\n  value:\r\n    _id:        document1\r\n    _rev:       6-841ea3bec41a1ccbf776591dda80e1f9\r\n    bar:       baz\r\n…\r\na lot of fancy information here\r\n…\r\n- id:    document5\r\n  key:   foo5\r\n  value:\r\n    _id:        document1\r\n    _rev:       6-841ea3bec41a1ccbf776591dda80e1f9\r\n    bar:       baz\r\n    \r\ndatabase ✩ [databaseName] ✩ ->\r\n```\r\n\r\n## Document Level Commands ( \"document ✩ [documentName] ✩ ->\" ):\r\n\r\n### content [key] [value]\r\n\r\n**Description:** Get or set document body content. Don't forget to save it with ```save``` command later on.\r\n\r\n**! This command is supported by auto-completion for the document body key !**\r\n\r\n**Examples:**\r\n\r\n```\r\ndocument ✩ [docId] ✩ -> content\r\n\r\nResponse:\r\n_id:        docId\r\nname:       someName\r\n…\r\na lot of fancy information here\r\n…\r\nfoo:        bar\r\n\r\ndocument ✩ [docId] ✩ ->\r\n```\r\n\r\n```\r\ndocument ✩ [docId] ✩ -> content name\r\n\r\nResponse:\r\nsomeName\r\n\r\ndocument ✩ [docId] ✩ ->\r\n```\r\n\r\n```\r\ndocument ✩ [docId] ✩ -> content name newName\r\n\r\nProperty set.\r\n\r\ndocument ✩ [docId] ✩ -> content\r\n\r\nResponse:\r\n_id:        docId\r\nname:       newName\r\n…\r\na lot of fancy information here\r\n…\r\nfoo:        bar\r\n\r\ndocument ✩ [docId] ✩ ->\r\n```\r\n\r\n### info ###\r\n\r\n**Description:** Get info about given document.\r\n\r\n**Examples:**\r\n\r\n```\r\ndocument ✩ [docId] ✩ -> info\r\n\r\nResponse:\r\nrevision: 13-8da00c2e8d7b1a0ddc6db934e48b85a1\r\nsize:     448\r\n\r\ndocument ✩ [docId] ✩ ->\r\n```\r\n\r\n### load ###\r\n\r\n**Description:** Load body of particular document. Before that command your document will be empty.\r\n\r\n**Example:**\r\n\r\n```\r\ndocument ✩ [docId] ✩ -> info\r\n\r\nResponse:\r\nrevision: 13-8da00c2e8d7b1a0ddc6db934e48b85a1\r\nsize:     448\r\n\r\ndocument ✩ [docId] ✩ ->\r\n```\r\n\r\n### save ###\r\n\r\n**Description:** Save body of particular document to CouchDB.\r\n\r\n**Example:**\r\n\r\n```\r\ndocument ✩ [docId] ✩ -> save\r\n\r\nDocument saved.\r\n\r\ndocument ✩ [docId] ✩ ->\r\n```\r\n\r\n## User Level Commands ( \"user ✩ [userName] ✩ ->\" ):\r\n\r\n### addRole [role1] [role2] ...###\r\n\r\n**Description:** Add one or more new roles to current user.\r\n\r\n**Example:**\r\n\r\n```\r\nuser ✩ foo ✩ -> addRole bar\r\n\r\nRole(s) were successfully added.\r\n\r\nuser ✩ foo ✩ -> getRoles\r\n\r\nUser has the following roles:\r\n\r\nResponse:\r\n- bar\r\n```\r\n\r\n```\r\nuser ✩ foo ✩ -> addRole bar1 bar2 bar3\r\n\r\nRole(s) were successfully added.\r\n\r\nuser ✩ foo ✩ -> getRoles\r\n\r\nUser has the following roles:\r\n\r\nResponse:\r\n- bar1\r\n- bar2\r\n- bar3\r\n\r\nuser ✩ foo ✩ ->\r\n```\r\n\r\n### create [password]###\r\n\r\n**Description:** Create new user. **Password argument optional**. If empty password prompt, will be displayed afterwards.\r\n\r\n**Example:**\r\n\r\n```\r\nconnection ✩ [host] ✩ -> user foo\r\n\r\nSwitched to user foo\r\n\r\nuser ✩ foo ✩ -> create\r\nWhat is the passwort for the user? fancyPassword\r\n\r\nUser was successfully created.\r\n\r\nuser ✩ foo ✩ ->\r\n```\r\n\r\n```\r\nconnection ✩ [host] ✩ -> user foo\r\n\r\nSwitched to user foo\r\n\r\nuser ✩ foo ✩ -> create fancyPassword\r\n\r\nUser was successfully created.\r\n\r\nuser ✩ foo ✩ ->\r\n```\r\n\r\n### delete ###\r\n\r\n**Description:** Delete current user. Level will be switched to connection level afterwards.\r\n\r\n**Example:**\r\n\r\n```\r\nuser ✩ foo ✩ -> delete\r\n\r\nUser was succesfully deleted.\r\n\r\nconnection ✩ 127.0.0.1 ✩ ->\r\n```\r\n\r\n### deleteRole [role]###\r\n\r\n**Description:** Delete a particular role of current user.\r\n\r\n**! This command is supported by auto-completion for the wished role !**\r\n\r\n**Example:**\r\n\r\n```\r\nuser ✩ foo ✩ -> getRoles\r\n\r\nUser has the following roles:\r\n\r\nResponse:\r\n- bar\r\n\r\nuser ✩ foo ✩ -> deleteRole bar\r\n\r\nRole(s) were successfully deleted.\r\n\r\nuser ✩ foo ✩ -> getRoles\r\n\r\nUser has the following roles:\r\n\r\nResponse:\r\n(empty array)\r\n\r\nuser ✩ foo ✩ ->\r\n```\r\n\r\n###getRoles###\r\n\r\n**Description:** Get all roles of current user.\r\n\r\n**Example:**\r\n\r\n```\r\nuser ✩ foo ✩ -> getRoles\r\n\r\nUser has the following roles:\r\n\r\nResponse:\r\n- bar\r\n- bar2\r\n- bar3\r\n\r\nuser ✩ foo ✩ ->\r\n```\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt](https://github.com/cowboy/grunt).\r\n\r\n## Release History\r\n- 0.6.1 - added possibility to delete multiple connections with one ```deleteConnection``` call\r\n\r\n- 0.6.0 - bug fix and error handling for npm stuff\r\n\r\n- 0.5.2 - updated package.json to point to new github pages as project homepage\r\n\r\n- 0.5.1 - only Readme update for new features to have complete docu in npm\r\n\r\n- 0.5.0 - new initialization handling of cli tool (setup of connection without prompt dialog)\r\n\r\n- 0.4.5 - error handling using domains, better output for listAdmins command, bugfix database command\r\n\r\n- 0.4.4 - better messages on setup, fix for content command on document level\r\n\r\n- 0.4.3 - connetions defaults.json is now ~/.cushion/defaults.json\r\n\r\n- 0.4.2 - safety fix at each level for catching exceptions\r\n\r\n- 0.4.1 - npm dependency fix\r\n\r\n- 0.4.0 - npm update check\r\n\r\n- 0.3.2 - more test coverage, fix content handling on document level, package.json dependency update\r\n\r\n- 0.3.1 - bugfixes for 'unsaved star'\r\n\r\n- 0.3.0 - much more test coverage, removed databaseCommand 'exists', 'unsaved star' on database|document|user level\r\n\r\n- 0.2.9 - added listAdmins call, deleteRole supports autocompletion\r\n\r\n- 0.2.8 - more tests, minor bug fixes, implementation of check mark for unsaved document changes\r\n\r\n\r\n## License\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2013 stefan judis\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n","google":"UA-41947981-1","note":"Don't delete this file! It's used internally to help with page regeneration."}